# Generated by Django 2.1.7 on 2019-04-14 21:24

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountHolder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CreditLine",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "statement_date",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="The numbered day of each month that your statement posts.",
                        verbose_name="Statement Date",
                    ),
                ),
                (
                    "date_opened",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Date Opened"
                    ),
                ),
                (
                    "annual_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Annual Fee ($)",
                    ),
                ),
                (
                    "interest_rate",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Interest Rate (%)",
                    ),
                ),
                (
                    "credit_line",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Credit Line",
                    ),
                ),
                (
                    "min_pay_pct",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Minimum Payment (%)",
                    ),
                ),
                (
                    "min_pay_dlr",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Minimum Payment ($)",
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Priority"
                    ),
                ),
                (
                    "holder",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="debt.AccountHolder",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Statement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Year"),
                ),
                (
                    "month",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Month"),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=9, verbose_name="Balance"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="debt.CreditLine",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["-year", "-month"],},
        ),
        migrations.AlterUniqueTogether(
            name="statement", unique_together={("user", "account", "year", "month")},
        ),
        migrations.AlterUniqueTogether(
            name="creditline", unique_together={("user", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="accountholder", unique_together={("user", "name")},
        ),
    ]
